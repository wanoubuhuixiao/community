<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ares.design.dao.ArticleDao">

    <!--  一对一级联查询 嵌套结果  -->
    <resultMap id="ResultMap1" type="com.ares.design.domain.Article">
        <id column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="article_user_id" property="articleUserId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR"/>
        <result column="article_summary" property="articleSummary" jdbcType="VARCHAR"/>
        <result column="article_view_count" property="articleViewCount" jdbcType="INTEGER"/>
        <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER"/>
        <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER"/>
        <!--        <result column="article_is_comment" property="articleIsComment" jdbcType="INTEGER"/>-->
        <!--        <result column="article_order" property="articleOrder" jdbcType="INTEGER"/>-->
        <result column="article_create_time" property="articleCreateTime" jdbcType="TIMESTAMP"/>
        <result column="article_update_time" property="articleUpdateTime" jdbcType="TIMESTAMP"/>
        <!--        <result column="article_status" property="articleStatus" jdbcType="INTEGER"/>-->
        <association property="user" javaType="com.ares.design.domain.User">
            <id property="userId" column="article_user_id"/>
            <result property="userName" column="user_name"/>
            <result property="userEmail" column="user_email"/>
            <result property="userLevel" column="user_level"/>
            <result property="userAvatar" column="user_avatar"/>
            <result property="userRegisterTime" column="user_register_time"/>
            <result property="userLastLoginTime" column="user_last_login_time"/>
            <result property="userStatus" column="user_status"/>
        </association>
    </resultMap>

    <!--  一对一级联查询 嵌套结果  -->
    <select id="getArticleById" parameterType="Integer" resultMap="ResultMap1">
        select a.*, u.*
        from article a,
             user u
        where a.article_user_id = u.user_id
          and a.article_id = #{articleId}
    </select>

    <sql id="Base_Column_List">
        article_id, article_user_id, article_title,
        article_content,article_summary, article_view_count,
        article_comment_count, article_like_count, article_create_time,
        article_update_time
    </sql>

    <!--    没有article_content-->
    <sql id="Column1">
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time,
        article.article_summary
    </sql>

    <!--    没有summary-->
    <sql id="Column2">
        article.article_id, article.article_user_id, article.article_title,
        article.article_view_count, article.article_comment_count,
        article.article_like_count, article.article_create_time, article.article_update_time
    </sql>
    <!-- 获得查看数最多的文章 -->
    <select id="getArticleListByViewCount" resultType="com.ares.design.domain.Article" parameterType="Integer">
        select
        <include refid="Base_Column_List"/>
        from article
        order by article_view_count DESC
        limit #{limit}
    </select>

    <insert id="insert" parameterType="com.ares.design.domain.Article" useGeneratedKeys="true" keyProperty="articleId">
        insert into article(article_user_id, article_title,
                            article_view_count, article_comment_count,
                            article_like_count, article_create_time, article_update_time,
                            article_content, article_summary)
        values (#{articleUserId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR},
                #{articleViewCount,jdbcType=INTEGER}, #{articleCommentCount,jdbcType=INTEGER},
                #{articleLikeCount,jdbcType=INTEGER},
                #{articleCreateTime,jdbcType=TIMESTAMP},
                #{articleUpdateTime,jdbcType=TIMESTAMP},
                #{articleContent,jdbcType=LONGVARCHAR}, #{articleSummary,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.ares.design.domain.Article">
        update article
        <set>
            <if test="articleUserId != null">article_user_id = #{articleUserId,jdbcType=INTEGER},</if>
            <if test="articleTitle != null">article_title = #{articleTitle,jdbcType=VARCHAR},</if>
            <if test="articleViewCount != null">article_view_count = #{articleViewCount,jdbcType=INTEGER},</if>
            <if test="articleCommentCount != null">article_comment_count = #{articleCommentCount,jdbcType=INTEGER},</if>
            <if test="articleLikeCount != null">article_like_count = #{articleLikeCount,jdbcType=INTEGER},</if>
            <if test="articleCreateTime != null">article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleUpdateTime != null">article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleContent != null">article_content = #{articleContent,jdbcType=LONGVARCHAR},</if>
            <if test="articleSummary != null">article_summary = #{articleSummary,jdbcType=VARCHAR},</if>
        </set>
        where article_id = #{articleId,jdbcType=INTEGER}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete
        from article
        where article_id = #{articleId,jdbcType=INTEGER}
    </delete>

    <!--获得随机文章-->
    <select id="listRandomArticle" resultType="com.ares.design.domain.Article" parameterType="Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM article
        ORDER BY RAND()
        limit #{limit}
    </select>

    <!--获得评论数较多的文章列表-->
    <select id="listArticleByCommentCount" resultType="com.ares.design.domain.Article" parameterType="Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM article
        ORDER BY article_comment_count DESC
        limit #{limit}
    </select>

    <!-- 分类 根据类型id和需要的文章数量获得ArticleList -->
    <select id="findArticleByCategoryId" resultType="com.ares.design.domain.Article">
        <!--            parameterType="Integer">-->
        SELECT
        <include refid="Column1"/>
        FROM article, article_category_ref
        WHERE
        article.article_id = article_category_ref.article_id AND
        article_category_ref.category_id = #{categoryId}
        LIMIT #{limit}
    </select>

    <!-- 根据用户id获得ArticleList -->
    <select id="findArticleByUserId" resultType="com.ares.design.domain.Article">
        <!--            parameterType="Integer">-->
        SELECT
        <include refid="Column1"/>
        FROM article
        WHERE article_user_id = #{userId}
        ORDER BY article_create_time DESC
        LIMIT #{limit}
    </select>

    <!--    最近文章-->
    <select id="getRecentArticle" resultType="com.ares.design.domain.Article" parameterType="Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        article
        ORDER BY article_create_time DESC
        LIMIT #{limit}
    </select>

    <!--获取文章总数-->
    <select id="countArticle" resultType="Integer">
        SELECT COUNT(*)
        FROM article
    </select>

    <!--获得所有文章-->
    <select id="AllArticle" resultType="com.ares.design.domain.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM article
    </select>

    <!--通过分页查询文章-->
    <select id="pageArticle" resultType="com.ares.design.domain.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM article
        limit #{pageIndex},#{pageSize}
    </select>

    <!--    用户写的文章数-->
    <select id="countArticleByUser" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*)
        FROM article
        WHERE article_user_id = #{id}
    </select>
</mapper>